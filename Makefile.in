# General info
SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
datarootdir = @datarootdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR        =
GOSH           = "@GOSH@"
GAUCHE_CONFIG  = "@GAUCHE_CONFIG@"
GAUCHE_PACKAGE = "@GAUCHE_PACKAGE@"
INSTALL        = "@GAUCHE_INSTALL@" -C

# For Gauche-Trema parameters
GAUCHE_LIBDIR     = "@GAUCHE_LIBDIR@"
GAUCHE_TREMA_LIBS = "@GAUCHE_TREMA_LIBS@"
GAUCHE_CC         = "@GAUCHE_CC@"

# For Trema parameters
trema_rebuild_dir = $(srcdir)/trm_rebuild
TREMA_LDFLAGS  = -L$(trema_rebuild_dir)
TREMA_CFLAGS   = "@TREMA_CFLAGS@"
TREMA_LIBS     = "@TREMA_LIBS@"
TREMA_HOME     = "@TREMA_HOME@"

# Other parameters
SOEXT  = @SOEXT@
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@
LOCAL_PATHS = "@LOCAL_PATHS@"

# Module-specific stuff
PACKAGE   = gauche-trema

ARCHFILES = gauche_trema.$(SOEXT)
SCMFILES  = $(srcdir)/net/trema.scm
HEADERS   = 

TARGET    = $(ARCHFILES)
GENERATED = 
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   configure.lineno autom4te*.cache $(PACKAGE).gpd

GAUCHE_PKGINCDIR  = "$(DESTDIR)@GAUCHE_PKGINCDIR@"
GAUCHE_PKGLIBDIR  = "$(DESTDIR)@GAUCHE_PKGLIBDIR@"
GAUCHE_PKGARCHDIR = "$(DESTDIR)@GAUCHE_PKGARCHDIR@"

gauche_trema_OBJS  = $(srcdir)/gauche_trema.o $(srcdir)/gauche_tremalib.o
trema_rebuild_SRCS = $(trema_rebuild_dir)/lib/log.c \
                     $(trema_rebuild_dir)/lib/log.h
libtrema           = $(trema_rebuild_dir)/libtrema.a

all : $(TARGET)

gauche_trema.$(SOEXT): $(gauche_trema_OBJS) $(libtrema)
	$(GAUCHE_CC) -g -shared \
	  $(GAUCHE_LIBDIR) $(TREMA_LDFLAGS) \
	  -o gauche_trema.$(SOEXT) $(gauche_trema_OBJS) \
	  $(GAUCHE_TREMA_LIBS)

gauche_trema.$(OBJEXT): gauche_trema.c
	$(GAUCHE_PACKAGE) compile -c --verbose \
	 --cflags=$(TREMA_CFLAGS) gauche_trema.c

gauche_tremalib.$(OBJEXT): gauche_tremalib.stub
	$(GAUCHE_PACKAGE) compile -c --verbose gauche_tremalib.stub

#$(libtrema): $(trema_rebuild_SRCS)
#	cp $(TREMA_HOME)/objects/lib/libtrema.a $(trema_rebuild_dir)
#	cp -r $(TREMA_HOME)/src/lib $(srcdir)/trm_rebuild
#	patch -u -p1 -d lib < $(trema_rebuild_dir)/libtrema.patch
#	gcc -c
#	ar rv $(libtrema) $(trema_rebuild_dir)/lib/log.o \
#	 $(trema_rebuild_dir)/lib/messenger.o

check : all
	@rm -f test.log
	$(GOSH) -I. -I$(srcdir) $(srcdir)/test.scm > test.log

install : all
	$(INSTALL) -m 444 -T $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR) $(SCMFILES) 
	$(INSTALL) -m 555 -T $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

uninstall :
	$(INSTALL) -U $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR) $(SCMFILES) 
	$(INSTALL) -U $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

clean :
	$(GAUCHE_PACKAGE) compile --clean gauche_trema $(gauche_trema_SRCS)
	rm -rf core $(TARGET) $(GENERATED) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) configure VERSION

